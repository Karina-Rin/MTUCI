import matplotlib.pyplot as plt
import numpy as np

# Входные переменные
объем_воды = [50, 100, 150, 200]
температура_воды = [10, 21, 46, 101]
объем_кофе = [5, 10, 15, 20]
время_варки = [30, 60, 120, 180]

# Выходная переменная
крепость_кофе = [25, 50, 75, 100]

# База правил
правила = [
    {'объем_воды': 30, 'температура_воды': 15, 'объем_кофе': 8,
     'время_варки': 45, 'крепость_кофе': 25},
    {'объем_воды': 100, 'температура_воды': 40, 'объем_кофе': 10,
     'время_варки': 60, 'крепость_кофе': 25},
    {'объем_воды': 150, 'температура_воды': 70, 'объем_кофе': 15,
     'время_варки': 120, 'крепость_кофе': 50},
    {'объем_воды': 200, 'температура_воды': 100, 'объем_кофе': 20,
     'время_варки': 180, 'крепость_кофе': 75},
    {'объем_воды': 50, 'температура_воды': 99, 'объем_кофе': 15,
     'время_варки': 60, 'крепость_кофе': 75},
    {'объем_воды': 45, 'температура_воды': 46, 'объем_кофе': 15,
     'время_варки': 120, 'крепость_кофе': 75},
    {'объем_воды': 40, 'температура_воды': 98, 'объем_кофе': 20,
     'время_варки': 120, 'крепость_кофе': 100},
    {'объем_воды': 35, 'температура_воды': 45, 'объем_кофе': 10,
     'время_варки': 60, 'крепость_кофе': 25},
    {'объем_воды': 47, 'температура_воды': 90, 'объем_кофе': 17,
     'время_варки': 120, 'крепость_кофе': 75},
    {'объем_воды': 39, 'температура_воды': 101, 'объем_кофе': 21,
     'время_варки': 180, 'крепость_кофе': 100},
    {'объем_воды': 145, 'температура_воды': 15, 'объем_кофе': 5,
     'время_варки': 30, 'крепость_кофе': 25},
    {'объем_воды': 130, 'температура_воды': 50, 'объем_кофе': 10,
     'время_варки': 120, 'крепость_кофе': 75},
    {'объем_воды': 190, 'температура_воды': 22, 'объем_кофе': 5,
     'время_варки': 30, 'крепость_кофе': 25},
    {'объем_воды': 180, 'температура_воды': 80, 'объем_кофе': 10,
     'время_варки': 120, 'крепость_кофе': 50},
    {'объем_воды': 185, 'температура_воды': 99, 'объем_кофе': 20,
     'время_варки': 180, 'крепость_кофе': 100}
]

# Функция принадлежности


def membership_function(x, a, b, c):
    if x <= a:
        return 0
    elif a < x <= b:
        return (x - a) / (b - a)
    elif b < x <= c:
        return (c - x) / (c - b)
    else:
        return 0

# Построение графиков принадлежности


for правило in правила:
    fig, ax = plt.subplots(figsize=(8, 6))

    x = np.linspace(0, 200, 1000)
    y = [membership_function(i, правило['объем_воды']-10, правило[
        'объем_воды'], правило['объем_воды']+10) for i in x]
    ax.plot(x, y, label='объем_воды', color='blue')

    y = [membership_function(i, правило['температура_воды']-10, правило[
        'температура_воды'], правило['температура_воды']+10) for i in x]
    ax.plot(x, y, label='температура_воды', color='green')

    y = [membership_function(i, правило['объем_кофе']-5, правило[
        'объем_кофе'], правило['объем_кофе']+5) for i in x]
    ax.plot(x, y, label='объем_кофе', color='red')

    y = [membership_function(i, правило['время_варки']-30, правило[
        'время_варки'], правило['время_варки']+30) for i in x]
    ax.plot(x, y, label='время_варки', color='orange')

    ax.legend()

    # Изменение положения аннотаций
    ax.annotate(f"Объем_воды: {правило['объем_воды']}", xy=(0.5, 0.8),
                xycoords='axes fraction', ha='center')
    ax.annotate(f"Температура_воды: {правило['температура_воды']}",
                xy=(0.5, 0.75), xycoords='axes fraction', ha='center')
    ax.annotate(f"Объем_кофе: {правило['объем_кофе']}", xy=(0.5, 0.7),
                xycoords='axes fraction', ha='center')
    ax.annotate(f"Время_варки: {правило['время_варки']}", xy=(0.5, 0.65),
                xycoords='axes fraction', ha='center')

    ax.annotate(f"Крепость кофе: {правило['крепость_кофе']}", xy=(0.5, 0.9),
                xycoords='axes fraction', ha='center')
    ax.annotate(f"Степень истинности: {правило['крепость_кофе']}",
                xy=(0.5, 0.95), xycoords='axes fraction', ha='center')
    plt.show()
